@using Microsoft.AspNet.Identity
@{
    var userAccount = new Sport_E.Controllers.UserAccount(User as System.Security.Claims.ClaimsPrincipal);
    Sport_E.Models.ApplicationDbContext db = new Sport_E.Models.ApplicationDbContext();
    var notifications = db.Notification.Where(e => e.ToEmail.Contains(HttpContext.Current.User.Identity.Name));
    notifications = notifications.Where(e => e.Read.Equals(false));
    var newNotifications = notifications.Count();
}
@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
    @Html.AntiForgeryToken()

    <ul class="nav navbar-nav navbar-right">
        <li>
            <a href="@Url.Action("Details", "Notification")" >Notifications
            @if (newNotifications > 0)
            {
            <span class="badge">@newNotifications</span>
            }
            </a>
        </li>
        <li>
            @Html.ActionLink(User.Identity.GetUserName(), "Details", "UserProfiles") 
        </li>
        <li>
             <!--Html.ActionLink( User.Identity.GetUserName() , "Index", "Manage", routeValues: null, htmlAttributes: new { title = "Manage" })-->
        </li>
        <li><a href="javascript:document.getElementById('logoutForm').submit()">Log out</a></li>
    </ul>
    }
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li>@Html.ActionLink("Register", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>
        <li>@Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
    </ul>
}
